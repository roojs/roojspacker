/* TokenReader.vapi generated by valac 0.36.6, do not modify. */

using GLib;

namespace JSDOC {
	public class TokenArray : Object {
		public Gee.ArrayList<Token> tokens;
		public TokenArray (Packer? packer, TokenReader reader);
		public Token? last ();
		public Token? lastSym ();
		public void push (Token t);
		public Token? pop ();
		public new Token @get (int i);
		public void dump ();
		public int length { get; }
	}
	public class TokenReader : Object {
		public bool collapseWhite;
		public bool keepDocs;
		public bool keepWhite;
		public bool keepComments;
		public bool sepIdents;
		public string filename;
		public bool ignoreBadGrammer;
		public TokenReader (Packer? packer);
		public TokenArray tokenize (TextStream stream);
		public int findPuncToken (TokenArray tokens, string data, int n);
		public Token? lastSym (TokenArray tokens, int n);
		public bool read_word (TextStream stream, TokenArray tokens);
		public bool read_punc (TextStream stream, TokenArray tokens);
		public bool read_space (TextStream stream, TokenArray tokens);
		public bool read_newline (TextStream stream, TokenArray tokens);
		public bool read_mlcomment (TextStream stream, TokenArray tokens);
		public bool read_slcomment (TextStream stream, TokenArray tokens);
		public bool read_dbquote (TextStream stream, TokenArray tokens);
		public bool read_snquote (TextStream stream, TokenArray tokens);
		public bool read_numb (TextStream stream, TokenArray tokens);
		public bool read_hex (TextStream stream, TokenArray tokens);
		public bool read_regx (TextStream stream, TokenArray tokens);
	}
	public errordomain TokenReader_Error {
		ArgumentError,
		SyntaxError
	}
}
